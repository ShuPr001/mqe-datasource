{"version":3,"sources":["../src/response_handler.js"],"names":[],"mappings":";;;;;;;;;AAAO,O;;;AAEA,eAAS,eAAT,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C;AAChD,YAAI,aAAa,EAAE,GAAF,CAAM,SAAS,IAAf,EAAqB,UAAC,IAAD,EAAU;AAC9C,iBAAO,EAAE,GAAF,CAAM,KAAK,MAAX,EAAmB,UAAC,MAAD,EAAY;AACpC,gBAAI,YAAY,KAAK,SAArB;AACA,gBAAI,aAAa,EAAE,GAAF,CAAM,OAAO,MAAb,EAAqB,UAAC,KAAD,EAAQ,KAAR,EAAkB;AACtD,qBAAO,CACL,OAAO,KAAP,CADK,EACU;AACf,qBAAO,UAAU,KAAV,GAAkB,UAAU,UAAV,GAAuB,KAAhD,CAAwD;AAFnD,eAAP;AAID,aALgB,CAAjB;;AAOA,gBAAI,gBAAgB,EAAE,GAAF,CAAM,OAAO,MAAb,EAAqB,UAAC,KAAD,EAAQ,GAAR,EAAgB;AACvD;AACA,kBAAK,QAAQ,KAAR,IAAiB,OAAO,aAAP,KAAyB,KAA3C,IACC,QAAQ,MAAR,IAAkB,OAAO,cAAP,KAA0B,KADjD,EACyD;AACvD,uBAAO,KAAP;AACD,eAHD,MAIK;AACH,uBAAO,EAAP;AACD;AACF,aATmB,EASjB,IATiB,CASZ,GATY,CAApB;;AAWA,mBAAO;AACL,sBAAQ,gBAAgB,GAAhB,GAAqB,KAAK,IAD7B;AAEL,0BAAY;AAFP,aAAP;AAID,WAxBM,CAAP;AAyBD,SA1BgB,CAAjB;AA2BA,eAAO,EAAE,OAAF,CAAU,UAAV,EAAsB,IAAtB,CAAP;AACD;;;;AAEM,eAAS,uBAAT,CAAiC,KAAjC,EAAwC,QAAxC,EAAkD;;AAEvD,iBAAS,SAAT,CAAmB,QAAnB,EAA6B;AAC3B,cAAI,OAAO,EAAX;AACA,YAAE,OAAF,CAAU,SAAS,IAAT,CAAc,QAAd,CAAV,EAAmC,UAAC,MAAD,EAAY;AAC7C,cAAE,OAAF,CAAU,MAAV,EAAkB,UAAC,QAAD,EAAW,GAAX,EAAmB;AACnC,kBAAI,CAAC,KAAK,GAAL,CAAL,EAAgB;AACd,qBAAK,GAAL,IAAY,EAAZ;AACD;AACD,mBAAK,GAAL,EAAU,IAAV,CAAe,QAAf;AACD,aALD;AAMD,WAPD;AAQA,YAAE,OAAF,CAAU,IAAV,EAAgB,UAAC,QAAD,EAAW,GAAX,EAAmB;AACjC,iBAAK,GAAL,IAAY,EAAE,IAAF,CAAO,EAAE,OAAF,CAAU,QAAV,CAAP,CAAZ;AACD,WAFD;AAGA,iBAAO,IAAP;AACD;;AAED,YAAI,UAAU,QAAd,EAAwB;AACtB,iBAAO,UAAU,QAAV,CAAP;AACD,SAFD,MAGK,IAAI,UAAU,SAAd,EAAyB;AAC5B,iBAAO,UAAU,QAAV,EAAoB,SAApB,CAAP;AACD,SAFI,MAGA,IAAI,UAAU,OAAd,EAAuB;AAC1B,iBAAO,UAAU,QAAV,EAAoB,OAApB,CAAP;AACD,SAFI,MAGA;AACH,iBAAO,SAAS,IAAT,CAAc,KAAd,CAAP;AACD;AACF","file":"response_handler.js","sourcesContent":["import _ from 'lodash';\n\nexport function handle_response(target, response) {\n  var timeseries = _.map(response.body, (body) => {\n    return _.map(body.series, (series) => {\n      var timerange = body.timerange;\n      var datapoints = _.map(series.values, (value, index) => {\n        return [\n          Number(value), // value\n          Number(timerange.start + timerange.resolution * index)  // timestamp\n        ];\n      });\n\n      var metric_prefix = _.map(series.tagset, (value, key) => {\n        // Use !== false for backward compatibility\n        if ((key === 'app' && target.addAppToAlias !== false) ||\n            (key === 'host' && target.addHostToAlias !== false)) {\n          return value;\n        }\n        else {\n          return '';\n        }\n      }).join(' ');\n\n      return {\n        target: metric_prefix + ' ' +body.name,\n        datapoints: datapoints\n      };\n    });\n  });\n  return _.flatten(timeseries, true);\n}\n\nexport function handle_explore_response(query, response) {\n\n  function getTagset(response) {\n    let tags = {};\n    _.forEach(response.body['tagset'], (tagset) => {\n      _.forEach(tagset, (tagValue, tag) => {\n        if (!tags[tag]) {\n          tags[tag] = [];\n        }\n        tags[tag].push(tagValue);\n      });\n    });\n    _.forEach(tags, (tagValue, tag) => {\n      tags[tag] = _.uniq(_.flatten(tagValue));\n    });\n    return tags;\n  }\n\n  if (query === 'tagset') {\n    return getTagset(response);\n  }\n  else if (query === 'cluster') {\n    return getTagset(response)['cluster'] ;\n  }\n  else if (query === 'hosts') {\n    return getTagset(response)['hosts'] ;\n  }\n  else {\n    return response.body[query];\n  }\n}\n"]}