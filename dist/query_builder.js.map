{"version":3,"sources":["../src/query_builder.js"],"names":[],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nexport default class MQEQuery {\n\n  /** @ngInject */\n  constructor(target, templateSrv, scopedVars) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    // this.templateSrv.formatValue = formatMQEMetric;\n    this.scopedVars = scopedVars;\n  }\n\n  /////////////////////\n  // Query Rendering //\n  /////////////////////\n\n  render(metricList, timeFrom, timeTo) {\n    let target = this.target;\n    let metrics = [];\n\n    for (let m of target.metrics) {\n      let metric = m.metric;\n      if (metric) {\n        if (containsWildcard(metric)) {\n          let filteredMetrics = filterMetrics(metric, metricList);\n\n          // Add alias\n          if (m.alias) {\n            if (containsWildcard(m.alias)) {\n              // Set whildcard part as metric alias\n              // query: os.cpu.* alias: * -> metric: os.cpu.system -> alias: system\n              filteredMetrics = _.map(filteredMetrics,\n                _.partial(convertMetricWithWildcard, target.functionList, metric));\n            } else if(containsIndex(m.alias)){\n              // query: tag1.tag2.* (the  metric can be very lengthy like below)\n              // metric: tag1.tag2.tag3.tag4.tag5.tag6\n              // alias: $6 ie show only tag6\n              var indices = getAliasIndexArray(m.alias);\n              filteredMetrics = _.map(filteredMetrics, _.partial(convertMetricWithIndex, target.functionList, indices));\n            }\n            else {\n              filteredMetrics = _.map(filteredMetrics,\n                _.compose(_.partial(this.addFunctionsWithAlias, target.functionList, m.alias), wrapMetric));\n            }\n          } else {\n            filteredMetrics = _.map(filteredMetrics, _.partial(this.addFunctionsToMetric, target.functionList));\n          }\n\n          metrics = metrics.concat(filteredMetrics);\n        } else {\n          var defaultAlias = metric;\n          metric = wrapMetric(metric);\n          // add functions here for single metric without wildcard\n          // Render functions if any\n          if(target.functionList !== undefined) {\n            if (target.functionList.length !== 0) {\n              metric += addFunctions(target.functionList);\n            }\n          }\n          // Add alias\n          if (m.alias) {\n            metric = addMQEAlias(m.alias, metric);\n          }\n          else {\n            metric = addMQEAlias(defaultAlias, metric);\n          }\n          metrics = metrics.concat(metric);\n        }\n      }\n    }\n    metrics = _.uniq(metrics);\n\n    return _.map(metrics, metric => {\n      let query = \"\";\n\n      // Set custom metric format function\n      let formatValueOriginal = this.templateSrv.formatValue;\n      this.templateSrv.formatValue = formatMQEMetric;\n      metric = this.templateSrv.replace(metric, this.scopedVars);\n\n      // Set original format function\n      this.templateSrv.formatValue = formatValueOriginal;\n\n      query += metric;\n\n      // Render apps and hosts\n      query += this.renderWhere(target.apps, target.hosts);\n\n      query = MQEQuery.addTimeRange(query, timeFrom, timeTo);\n      return query;\n    });\n  }\n\n  addFunctionsWithAlias(functionList, alias, metric) {\n    if(functionList !== undefined) {\n      if (functionList.length !== 0) {\n        metric += addFunctions(functionList);\n      }\n    }\n    var resultmetric =  addMQEAlias(alias, metric);\n    return resultmetric;\n  }\n\n  addFunctionsToMetric(functionList, metric) {\n    let defaultAlias = metric;\n    metric = wrapMetric(metric);\n    if(functionList !== undefined) {\n      if (functionList.length !== 0) {\n        metric += addFunctions(functionList);\n        return addMQEAlias(defaultAlias, metric);\n      }\n    }\n    return metric;\n  }\n\n  renderWhere(apps, hosts) {\n    let query = \"\";\n    if (apps.length || hosts.length) {\n      query += \" where \";\n      if (apps.length) {\n        query += \"app in (\" + _.map(apps, wrapTag).join(', ') + \")\";\n        if (hosts.length)  {\n          query += \" and \";\n        }\n      }\n      if (hosts.length) {\n        query += \"host in (\" + _.map(hosts, wrapTag).join(', ') + \")\";\n      }\n    }\n    return query;\n  }\n\n  renderWhereClauses(whereClauses) {\n    var renderedClauses = _.map(whereClauses, (clauseObj, index) => {\n      var rendered = \"\";\n      if (index !== 0) {\n        rendered += clauseObj.condition + \" \";\n      }\n\n      // Put non-numeric values into quotes.\n      var value;\n      if (_.isNumber(clauseObj.value) ||\n          this.containsVariable(clauseObj.value)) {\n        value = clauseObj.value;\n      } else {\n        value = \"'\" + clauseObj.value + \"'\";\n      }\n      rendered += clauseObj.column + ' ' + clauseObj.operator + ' ' + value;\n      return rendered;\n    });\n    return renderedClauses.join(' ');\n  }\n\n  // Check for template variables\n  containsVariable(str) {\n    var variables = _.map(this.templateSrv.variables, 'name');\n    var self = this;\n    return _.some(variables, variable => {\n      return self.templateSrv.containsVariable(str, variable);\n    });\n  }\n\n  ////////////////////\n  // Static methods //\n  ////////////////////\n\n  static getMetrics() {\n    var query = \"describe all\";\n    return query;\n  }\n\n  static getColumns(metric) {\n    return \"describe \" + metric;\n  }\n\n  static addTimeRange(query, timeFrom, timeTo) {\n    var timeRangeRegex = /from.*to/;\n    if(!timeRangeRegex.test(query)) {\n      query = trim(query) + \" from \" + timeFrom + \" to \" + timeTo;\n    }\n    return query;\n  }\n}\n\nfunction containsWildcard(str) {\n  var wildcardRegex = /[*!]/;\n  return wildcardRegex.test(str);\n}\n\nfunction containsIndex(str) {\n  var wildcardRegex = /\\$(\\d)/g;\n  return wildcardRegex.test(str);\n}\n\nfunction getAliasIndexArray(str) {\n  // replace all the $ with space\n  // convert it to list\n  str = str.replace(/\\$/g, ' ');\n  str = str.trim();\n  var indices = str.split(' ');\n  for(var i=0; i<indices.length; i++) {\n    indices[i] = parseInt(indices[i], 10);\n  }\n  return indices;\n}\n\nfunction getMetricSplits(str) {\n  var metricSplits = str.split('.');\n  return (metricSplits);\n\n}\n\nfunction getCustomAliasName(metricSplits, indices) {\n  var aliasString = \"\";\n  for(var i = 0; i<indices.length; i++) {\n    var index = indices[i]-1;\n    if(index >= 0 && index <  metricSplits.length) {\n      aliasString += metricSplits[indices[i] - 1] + \".\";\n    }\n  }\n  return aliasString.slice(0, -1);\n}\n\nfunction addFunctions(functions){\n  var query = \"\";\n  if (functions.length) {\n    _.forEach(functions, function (fn) {\n      if(fn.func.length !== 0) {\n        query += \"|\" + fn.func + \" \";\n      }\n    });\n  }\n  return query;\n}\n\nfunction convertMetricWithIndex(functionList, indices, metric) {\n  var suffix = getCustomAliasName(getMetricSplits(metric),indices);\n  metric = wrapMetric(metric);\n  if(functionList !== undefined) {\n    if (functionList.length !== 0) {\n      metric += addFunctions(functionList);\n    }\n  }\n\n  return addMQEAlias(suffix, metric);\n}\n\nfunction composeRegex(str){\n  var regex=\"\";\n  var metricSplits = getMetricSplits(str);\n  for(var i = 0; i<metricSplits.length; i++) {\n    if(metricSplits[i].search(/!/g) !== -1) {\n      str = metricSplits[i].replace(/!/g,\"\");\n      regex += \"^(?!.*\"+str;\n    }\n    else if(metricSplits[i].search(/\\*/g) !== -1) {\n      str = metricSplits[i].replace(/\\*/g,\"\");\n      regex += \"(?=.*\"+str;\n    }\n    else {\n      regex += \"(?=.*\"+metricSplits[i];\n    }\n    regex += (i === metricSplits.length-1) ? \")\" : \"\\.)\";\n  }\n  regex = new RegExp(regex);\n  return regex;\n}\n\nfunction filterMetrics(str, metrics) {\n  let filterRegex;\n  var  containsFilter = str.search(/!/);\n\n  if(containsFilter !== -1) {\n    filterRegex = composeRegex(str);\n  }\n  else {\n    str = str.replace(/\\./g, '\\\\\\.');\n    filterRegex = new RegExp(str.replace('*', '.*'), 'g');\n  }\n  return _.filter(metrics, metric => {\n    return metric.search(filterRegex) !== -1;\n  });\n}\n\nfunction trim(str) {\n  var trimRegex = /^[\\s]*(.*?)[\\s]*$/;\n  var match = str.match(trimRegex);\n  return match ? match[0] : match;\n}\n\nfunction convertMetricWithWildcard(functions, metricQuery, metric) {\n  let suffix = getMetricSuffix(metricQuery, metric);\n  metric = wrapMetric(metric);\n\n  // Render functions if any  before add alias\n  if(functions !== undefined) {\n    if (functions.length !== 0) {\n      metric += addFunctions(functions);\n    }\n  }\n  return addMQEAlias(suffix, metric);\n}\n\nfunction getMetricSuffix(metricQuery, metric) {\n  let metricPrefix = metricQuery.replace(/\\./g, '\\\\\\.');\n  let suffixRegex = new RegExp(metricPrefix.replace('*', '(.*)'));\n  let suffix = suffixRegex.exec(metric);\n  return suffix[1];\n}\n\nfunction addMQEAlias(alias, metric) {\n  return metric + \" {\" + alias + \"}\";\n}\n\n// Wrap metric with ``: os.cpu.user -> `os.cpu.user`\nfunction wrapMetric(metric) {\n  return '`' + metric + '`';\n}\n\nfunction wrapTag(tag) {\n  return \"'\" + tag + \"'\";\n}\n\n// Special value formatter for MQE metric.\n// Render multi-value variables for using with metric template:\n// $metric => ('os.cpu.user', 'os.cpu.system')\n// select `$metric` => select `os.cpu.user`, `os.cpu.system`\nfunction formatMQEMetric(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return value.join(\"`, `\");\n}\n"]}