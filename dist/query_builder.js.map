{"version":3,"sources":["../src/query_builder.js"],"names":["containsWildcard","str","wildcardRegex","test","containsIndex","getAliasIndexArray","replace","trim","indices","split","i","length","parseInt","getMetricSplits","metricSplits","getEachMetricTagSplits","newMetricSplits","metricSplitsLength","metricTag","search","metricTagCopy","startIndex","endIndex","isRegexFound","j","push","slice","getCustomAliasName","aliasString","index","addFunctions","functions","query","_","forEach","fn","func","convertMetricWithIndex","functionList","metric","suffix","wrapMetric","undefined","addMQEAlias","composeRegex","regex","RegExp","filterMetrics","metrics","filterRegex","containsFilter","filter","trimRegex","match","convertMetricWithWildcard","metricQuery","getMetricSuffix","metricPrefix","suffixRegex","exec","alias","addJoinsIfAny","metricDetail","joins","currentJoinMetric","joinOP","joinMetric","wrapTag","tag","formatMQEMetric","value","join","MQEQuery","target","templateSrv","scopedVars","metricList","timeFrom","timeTo","m","filteredMetrics","map","partial","compose","addFunctionsWithAlias","addFunctionsToMetric","concat","defaultAlias","uniq","formatValueOriginal","formatValue","renderWhere","apps","hosts","addTimeRange","resultmetric","whereClauses","renderedClauses","clauseObj","rendered","condition","isNumber","containsVariable","column","operator","variables","self","some","variable","timeRangeRegex"],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nexport default class MQEQuery {\n\n  /** @ngInject */\n  constructor(target, templateSrv, scopedVars) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    // this.templateSrv.formatValue = formatMQEMetric;\n    this.scopedVars = scopedVars;\n  }\n\n  /////////////////////\n  // Query Rendering //\n  /////////////////////\n\n  render(metricList, timeFrom, timeTo) {\n    let target = this.target;\n    let metrics = [];\n    if (target.metrics === undefined) {\n      return;\n    }\n\n    for (let m of target.metrics) {\n      let metric = m.metric;\n      if (metric) {\n        if (containsWildcard(metric)) {\n          let filteredMetrics = filterMetrics(metric, metricList);\n\n          // Add alias\n          if (m.alias) {\n            if (containsWildcard(m.alias)) {\n              // Set whildcard part as metric alias\n              // query: os.cpu.* alias: * -> metric: os.cpu.system -> alias: system\n              filteredMetrics = _.map(filteredMetrics,\n                _.partial(convertMetricWithWildcard, target.functionList, metric));\n            } else if(containsIndex(m.alias)){\n              // query: tag1.tag2.* (the  metric can be very lengthy like below)\n              // metric: tag1.tag2.tag3.tag4.tag5.tag6\n              // alias: $6 ie show only tag6\n              var indices = getAliasIndexArray(m.alias);\n              filteredMetrics = _.map(filteredMetrics, _.partial(convertMetricWithIndex, target.functionList, indices));\n            }\n            else {\n              filteredMetrics = _.map(filteredMetrics,\n                _.compose(_.partial(this.addFunctionsWithAlias, target.functionList, m.alias), wrapMetric));\n            }\n          } else {\n            filteredMetrics = _.map(filteredMetrics, _.partial(this.addFunctionsToMetric, target.functionList));\n          }\n\n          metrics = metrics.concat(filteredMetrics);\n        } else {\n          var defaultAlias = metric;\n          metric = addJoinsIfAny(m);\n          metric = wrapMetric(metric);\n          // add functions here for single metric without wildcard\n          // Render functions if any\n          if(target.functionList !== undefined) {\n            if (target.functionList.length !== 0) {\n              metric += addFunctions(target.functionList);\n            }\n          }\n          // Add alias\n          if (m.alias) {\n            metric = addMQEAlias(m.alias, metric);\n          }\n          else {\n            metric = addMQEAlias(defaultAlias, metric);\n          }\n          metrics = metrics.concat(metric);\n        }\n      }\n    }\n    metrics = _.uniq(metrics);\n\n    return _.map(metrics, metric => {\n      let query = \"\";\n\n      // Set custom metric format function\n      let formatValueOriginal = this.templateSrv.formatValue;\n      this.templateSrv.formatValue = formatMQEMetric;\n      metric = this.templateSrv.replace(metric, this.scopedVars);\n\n      // Set original format function\n      this.templateSrv.formatValue = formatValueOriginal;\n\n      query += metric;\n\n      // Render apps and hosts\n      query += this.renderWhere(target.apps, target.hosts);\n\n      query = MQEQuery.addTimeRange(query, timeFrom, timeTo);\n      return query;\n    });\n  }\n\n  addFunctionsWithAlias(functionList, alias, metric) {\n    if(functionList !== undefined) {\n      if (functionList.length !== 0) {\n        metric += addFunctions(functionList);\n      }\n    }\n    var resultmetric =  addMQEAlias(alias, metric);\n    return resultmetric;\n  }\n\n  addFunctionsToMetric(functionList, metric) {\n    let defaultAlias = metric;\n    metric = wrapMetric(metric);\n    if(functionList !== undefined) {\n      if (functionList.length !== 0) {\n        metric += addFunctions(functionList);\n        return addMQEAlias(defaultAlias, metric);\n      }\n    }\n    return metric;\n  }\n\n  renderWhere(apps, hosts) {\n    let query = \"\";\n    if (apps.length || hosts.length) {\n      query += \" where \";\n      if (apps.length) {\n        query += \"cluster in (\" + _.map(apps, wrapTag).join(', ') + \")\";\n        if (hosts.length)  {\n          query += \" and \";\n        }\n      }\n      if (hosts.length) {\n        query += \"host in (\" + _.map(hosts, wrapTag).join(', ') + \")\";\n      }\n    }\n    return query;\n  }\n\n  renderWhereClauses(whereClauses) {\n    var renderedClauses = _.map(whereClauses, (clauseObj, index) => {\n      var rendered = \"\";\n      if (index !== 0) {\n        rendered += clauseObj.condition + \" \";\n      }\n\n      // Put non-numeric values into quotes.\n      var value;\n      if (_.isNumber(clauseObj.value) ||\n          this.containsVariable(clauseObj.value)) {\n        value = clauseObj.value;\n      } else {\n        value = \"'\" + clauseObj.value + \"'\";\n      }\n      rendered += clauseObj.column + ' ' + clauseObj.operator + ' ' + value;\n      return rendered;\n    });\n    return renderedClauses.join(' ');\n  }\n\n  // Check for template variables\n  containsVariable(str) {\n    var variables = _.map(this.templateSrv.variables, 'name');\n    var self = this;\n    return _.some(variables, variable => {\n      return self.templateSrv.containsVariable(str, variable);\n    });\n  }\n\n  ////////////////////\n  // Static methods //\n  ////////////////////\n\n  static getMetrics() {\n    var query = \"describe all\";\n    return query;\n  }\n\n  static getColumns(metric) {\n    return \"describe \" + metric;\n  }\n\n  static addTimeRange(query, timeFrom, timeTo) {\n    var timeRangeRegex = /from.*to/;\n    if(!timeRangeRegex.test(query)) {\n      query = trim(query) + \" from \" + timeFrom + \" to \" + timeTo;\n    }\n    return query;\n  }\n}\n\nfunction containsWildcard(str) {\n  var wildcardRegex = /[*!]/;\n  return wildcardRegex.test(str);\n}\n\nfunction containsIndex(str) {\n  var wildcardRegex = /\\$(\\d)/g;\n  return wildcardRegex.test(str);\n}\n\nfunction getAliasIndexArray(str) {\n  // replace all the $ with space\n  // convert it to list\n  str = str.replace(/\\$/g, ' ');\n  str = str.trim();\n  var indices = str.split(' ');\n  for(var i=0; i<indices.length; i++) {\n    indices[i] = parseInt(indices[i], 10);\n  }\n  return indices;\n}\n\nfunction getMetricSplits(str) {\n  var metricSplits = str.split('.');\n  return (metricSplits);\n\n}\n\nfunction getEachMetricTagSplits(metricSplits) {\n  var newMetricSplits = [];\n  var metricSplitsLength = metricSplits.length;\n  for(var i = 0; i<metricSplitsLength; i++) {\n    var metricTag = metricSplits[i];\n    if(metricTag.search(/!/) !== -1) {\n      var metricTagCopy = metricTag;\n      var startIndex = 0, endIndex =metricTag.length-1 ;\n      var isRegexFound = false;\n      for(var j= 0; j<metricTag.length; j++) {\n        if(metricTag[j] === '!') {\n          endIndex = j;\n          if(startIndex !== endIndex){\n            newMetricSplits.push(metricTagCopy.slice(startIndex, endIndex));\n          }\n          startIndex = j;\n          isRegexFound = true;\n        }\n        else if(isRegexFound === true){\n          if(metricTag[j] === '_') {\n            endIndex = j+1;\n            newMetricSplits.push(metricTagCopy.slice(startIndex, endIndex));\n            startIndex = j+1;\n            isRegexFound = false;\n          }\n        }\n        if(j=== metricTag.length-1) {\n          endIndex = metricTag.length;\n          newMetricSplits.push(metricTagCopy.slice(startIndex, endIndex));\n        }\n      }\n    }\n    else {\n      newMetricSplits.push(metricTag);\n    }\n  }\n  return newMetricSplits;\n}\n\nfunction getCustomAliasName(metricSplits, indices) {\n  var aliasString = \"\";\n  for(var i = 0; i<indices.length; i++) {\n    var index = indices[i]-1;\n    if(index >= 0 && index <  metricSplits.length) {\n      aliasString += metricSplits[indices[i] - 1] + \".\";\n    }\n  }\n  return aliasString.slice(0, -1);\n}\n\nfunction addFunctions(functions){\n  var query = \"\";\n  if (functions.length) {\n    _.forEach(functions, function (fn) {\n      if(fn.func.length !== 0) {\n        query += \"|\" + fn.func + \" \";\n      }\n    });\n  }\n  return query;\n}\n\nfunction convertMetricWithIndex(functionList, indices, metric) {\n  var suffix = getCustomAliasName(getMetricSplits(metric),indices);\n  metric = wrapMetric(metric);\n  if(functionList !== undefined) {\n    if (functionList.length !== 0) {\n      metric += addFunctions(functionList);\n    }\n  }\n\n  return addMQEAlias(suffix, metric);\n}\n\nfunction composeRegex(str){\n  var regex=\"\";\n  var metricSplits = getMetricSplits(str);\n  metricSplits = getEachMetricTagSplits(metricSplits);\n  for(var i = 0; i<metricSplits.length; i++) {\n    if(metricSplits[i].search(/!/g) !== -1) {\n      str = metricSplits[i].replace(/!/g,\"\");\n      regex += \"^(?!.*\"+str;\n    }\n    else if(metricSplits[i].search(/\\*/g) !== -1) {\n      str = metricSplits[i].replace(/\\*/g,\"\");\n      regex += \"(?=.*\"+str;\n    }\n    else {\n      regex += \"(?=.*\"+metricSplits[i];\n    }\n    regex += (i === metricSplits.length-1) ? \")\" : \"\\.)\";\n  }\n  regex = new RegExp(regex);\n  return regex;\n}\n\nfunction filterMetrics(str, metrics) {\n  let filterRegex;\n  var  containsFilter = str.search(/!/);\n\n  if(containsFilter !== -1) {\n    filterRegex = composeRegex(str);\n  }\n  else {\n    str = str.replace(/\\./g, '\\\\\\.');\n    filterRegex = new RegExp(str.replace('*', '.*'), 'g');\n  }\n  return _.filter(metrics, metric => {\n    return metric.search(filterRegex) !== -1;\n  });\n}\n\nfunction trim(str) {\n  var trimRegex = /^[\\s]*(.*?)[\\s]*$/;\n  var match = str.match(trimRegex);\n  return match ? match[0] : match;\n}\n\nfunction convertMetricWithWildcard(functions, metricQuery, metric) {\n  let suffix = getMetricSuffix(metricQuery, metric);\n  metric = wrapMetric(metric);\n\n  // Render functions if any  before add alias\n  if(functions !== undefined) {\n    if (functions.length !== 0) {\n      metric += addFunctions(functions);\n    }\n  }\n  return addMQEAlias(suffix, metric);\n}\n\nfunction getMetricSuffix(metricQuery, metric) {\n  let metricPrefix = metricQuery.replace(/\\./g, '\\\\\\.');\n  let suffixRegex = new RegExp(metricPrefix.replace('*', '(.*)'));\n  let suffix = suffixRegex.exec(metric);\n  return suffix[1];\n}\n\nfunction addMQEAlias(alias, metric) {\n  return metric + \" {\" + alias + \"}\";\n}\n\nfunction addJoinsIfAny(metricDetail) {\n  // check for joins in metricDetail\n  // if exists, take metric and keep on adding each JoinOperator and JoinMetric to the metric, like\n  // os.cpu.all.system` + `os.cpu.all.irq` - `os.cpu.guest etc\n  // if no joins, do nothing just return\n  let metric = metricDetail.metric;\n  if(metricDetail.joins !== undefined) {\n    if(metricDetail.joins.length !== 0) {\n      for(var i = 0; i<metricDetail.joins.length; i++) {\n        let currentJoinMetric = metricDetail.joins[i];\n        let joinOP = currentJoinMetric.joinOP.trim();\n        let joinMetric = currentJoinMetric.joinMetric.trim();\n\n        if(joinOP.length !== 0 && joinMetric.length !== 0) {\n          metric += \"` \" + currentJoinMetric.joinOP + \" `\" + currentJoinMetric.joinMetric;\n        }\n      }\n    }\n  }\n  return metric;\n}\n\n// Wrap metric with ``: os.cpu.user -> `os.cpu.user`\nfunction wrapMetric(metric) {\n  return '(`' + metric + '`)';\n}\n\nfunction wrapTag(tag) {\n  return \"'\" + tag + \"'\";\n}\n\n// Special value formatter for MQE metric.\n// Render multi-value variables for using with metric template:\n// $metric => ('os.cpu.user', 'os.cpu.system')\n// select `$metric` => select `os.cpu.user`, `os.cpu.system`\nfunction formatMQEMetric(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return value.join(\"`, `\");\n}\n"]}