{"version":3,"sources":["../src/query_builder.js"],"names":["containsWildcard","str","wildcardRegex","test","filterMetrics","metrics","replace","filterRegex","RegExp","_","filter","metric","search","trim","trimRegex","match","getMetricSuffix","metricQuery","metricPrefix","suffixRegex","suffix","exec","addMQEAlias","alias","MQEQuery","target","templateSrv","scopedVars","metricList","timeFrom","timeTo","interval","m","filteredMetrics","map","partial","concat","uniq","query","renderWhere","apps","hosts","addTimeRange","length","app","join","host","whereClauses","renderedClauses","clauseObj","index","rendered","condition","value","isNumber","containsVariable","column","operator","variables","self","some","variable","timeRangeRegex"],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nexport default class MQEQuery {\n\n  /** @ngInject */\n  constructor(target, templateSrv, scopedVars) {\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n  }\n\n  /////////////////////\n  // Query Rendering //\n  /////////////////////\n\n  render(metricList, timeFrom, timeTo, interval) {\n    let target = this.target;\n    let metrics = [];\n\n    for (let m of target.metrics) {\n      let metric = m.metric;\n      if (metric) {\n        if (containsWildcard(metric)) {\n          let filteredMetrics = filterMetrics(metric, metricList);\n\n          // Add alias\n          if (m.alias) {\n            if (containsWildcard(m.alias)) {\n              // Set whildcard part as metric alias\n              // query: os.cpu.* alias: * -> metric: os.cpu.system -> alias: system\n              filteredMetrics = _.map(filteredMetrics, _.partial(getMetricSuffix, metric));\n            } else {\n              filteredMetrics = _.map(filteredMetrics, _.partial(addMQEAlias, m.alias));\n            }\n          }\n\n          metrics = metrics.concat(filteredMetrics);\n        } else {\n          // Add alias\n          if (m.alias) {\n            metric = addMQEAlias(m.alias, metric);\n          }\n\n          metrics = metrics.concat(metric);\n        }\n      }\n    }\n    metrics = _.uniq(metrics);\n\n    return _.map(metrics, metric => {\n      let query = \"\";\n      query += metric;\n\n      // Render apps and hosts\n      query += this.renderWhere(target.apps, target.hosts);\n\n      query = MQEQuery.addTimeRange(query, timeFrom, timeTo);\n      return query;\n    });\n  }\n\n  renderWhere(apps, hosts) {\n    let query = \"\";\n    if (apps.length || hosts.length) {\n      query += \" where \";\n      if (apps.length) {\n        query += \"app in (\" + _.map(apps, app => {\n          return \"'\" + app + \"'\";\n        }).join(', ') + \")\";\n        if (hosts.length)  {\n          query += \" and \";\n        }\n      }\n      if (hosts.length) {\n        query += \"host in (\" + _.map(hosts, host => {\n          return \"'\" + host + \"'\";\n        }).join(', ') + \")\";\n      }\n    }\n    return query;\n  }\n\n  renderWhereClauses(whereClauses) {\n    var renderedClauses = _.map(whereClauses, (clauseObj, index) => {\n      var rendered = \"\";\n      if (index !== 0) {\n        rendered += clauseObj.condition + \" \";\n      }\n\n      // Put non-numeric values into quotes.\n      var value;\n      if (_.isNumber(clauseObj.value) ||\n          this.containsVariable(clauseObj.value)) {\n        value = clauseObj.value;\n      } else {\n        value = \"'\" + clauseObj.value + \"'\";\n      }\n      rendered += clauseObj.column + ' ' + clauseObj.operator + ' ' + value;\n      return rendered;\n    });\n    return renderedClauses.join(' ');\n  }\n\n  // Check for template variables\n  containsVariable(str) {\n    var variables = _.map(this.templateSrv.variables, 'name');\n    var self = this;\n    return _.some(variables, variable => {\n      return self.templateSrv.containsVariable(str, variable);\n    });\n  }\n\n  ////////////////////\n  // Static methods //\n  ////////////////////\n\n  static getMetrics() {\n    var query = \"describe all\";\n    return query;\n  }\n\n  static getColumns(metric) {\n    return \"describe \" + metric;\n  }\n\n  static addTimeRange(query, timeFrom, timeTo, interval) {\n    var timeRangeRegex = /from.*to/;\n    if(!timeRangeRegex.test(query)) {\n      query = trim(query) + \" from \" + timeFrom + \" to \" + timeTo;\n    }\n    return query;\n  }\n}\n\nfunction containsWildcard(str) {\n  var wildcardRegex = /\\*/;\n  return wildcardRegex.test(str);\n}\n\nfunction filterMetrics(str, metrics) {\n  str = str.replace(/\\./g, '\\\\\\.');\n  var filterRegex = new RegExp(str.replace('*', '.*'), 'g');\n  return _.filter(metrics, metric => {\n    return metric.search(filterRegex) !== -1;\n  });\n}\n\nfunction trim(str) {\n  var trimRegex = /^[\\s]*(.*?)[\\s]*$/;\n  var match = str.match(trimRegex);\n  return match ? match[0] : match;\n}\n\nfunction getMetricSuffix(metricQuery, metric) {\n  let metricPrefix = metricQuery.replace(/\\./g, '\\\\\\.');\n  let suffixRegex = new RegExp(metricPrefix.replace('*', '(.*)'));\n  let suffix = suffixRegex.exec(metric);\n  return addMQEAlias(suffix[1], metric);\n}\n\nfunction addMQEAlias(alias, metric) {\n  return metric + \" {\" + alias + \"}\";\n}\n"]}