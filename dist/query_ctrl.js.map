{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport MQEQuery from './query_builder';\n\nexport class MQEQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q, uiSegmentSrv, templateSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.templateSrv = templateSrv;\n\n    var target_defaults = {\n      rawQuery: \"\",\n      metrics: [{metric: \"\"}],\n      functionList:[{ func: \"\"}],\n      apps: [],\n      hosts: [],\n      addAppToAlias: true,\n      addHostToAlias: true\n    };\n    _.defaults(this.target, target_defaults);\n\n    this.appSegments = _.map(this.target.apps, this.uiSegmentSrv.newSegment);\n    this.hostSegments = _.map(this.target.hosts, this.uiSegmentSrv.newSegment);\n    this.removeSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove --'});\n    this.fixSegments(this.appSegments);\n    this.fixSegments(this.hostSegments);\n\n    // bs-typeahead can't work with async code so we need to\n    // store metrics first.\n    this.availableMetrics = [];\n    this.updateMetrics();\n    // Pass this to getMetrics() function, because it's called from bs-typeahead\n    // without proper context.\n    this.getMetrics = _.bind(this.getMetrics, this);\n\n    this.availableFunctions = [];\n    this.udpateFunctions();\n\n    //get functions here\n    this.getFunctions = _.bind(this.getFunctions, this);\n\n    // Update panel when metric selected from dropdown\n    $scope.$on('typeahead-updated', () => {\n      this.onChangeInternal();\n    });\n  }\n\n  invokeMQEQuery(query) {\n    return this.datasource._mqe_query(query).then(result => {\n      return result.body;\n    });\n  }\n\n  exploreMetrics(query) {\n    return this.datasource._mqe_explore(query);\n  }\n\n  updateMetrics() {\n    var self = this;\n    this.exploreMetrics('metrics').then(metrics => {\n      self.availableMetrics = metrics;\n    });\n  }\n\n  // Event handlers\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  getCollapsedText() {\n    return this.target.rawQuery;\n  }\n\n  appSegmentChanged(segment) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.apps = _.map(_.filter(this.appSegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.appSegments = _.map(this.target.apps, this.uiSegmentSrv.newSegment);\n    this.appSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.onChangeInternal();\n  }\n\n  hostSegmentChanged(segment) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.hosts = _.map(_.filter(this.hostSegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.hostSegments = _.map(this.target.hosts, this.uiSegmentSrv.newSegment);\n    this.hostSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.onChangeInternal();\n  }\n\n  addMetric() {\n    this.target.metrics.push({metric: \"\"});\n    this.onChangeInternal();\n  }\n\n  addFunction() {\n    this.target.functionList.push({ func: \"\" });\n    this.onChangeInternal();\n  }\n\n  removeMetric(index) {\n    this.target.metrics.splice(index, 1);\n    this.onChangeInternal();\n  }\n\n  removeFunction() {\n    this.target.functionList.splice(this.target.functionList.length-1, 1);\n    this.onChangeInternal();\n  }\n  ///////////////////////\n  // Query suggestions //\n  ///////////////////////\n\n  getMetrics() {\n    // Don't touch original metric list\n    var metrics = _.clone(this.availableMetrics);\n    for (let variable of this.templateSrv.variables) {\n      metrics.unshift('$' + variable.name);\n    }\n    return metrics;\n  }\n\n  getFunctions() {\n    var fns = _.clone(this.availableFunctions);\n    for (let variable of this.templateSrv.variables) {\n      fns.unshift('$' + variable.name);\n    }\n    return fns;\n  }\n\n  describeMetric(metric) {\n    var describeQuery = MQEQuery.getColumns(metric);\n    return this.invokeMQEQuery(describeQuery);\n  }\n\n  getApps() {\n    return this.exploreMetrics('cluster').then(apps => {\n      let segments = this.transformToSegments(apps, true);\n      segments.splice(0, 0, angular.copy(this.removeSegment));\n      return segments;\n    });\n  }\n\n  getHosts() {\n    return this.exploreMetrics('hosts').then(hosts => {\n      let segments = this.transformToSegments(hosts, true);\n      segments.splice(0, 0, angular.copy(this.removeSegment));\n      return segments;\n    });\n  }\n\n  refineFunctionList(functions) {\n    var operatorlist = ['*','+','-','/'];\n    _.forEach(operatorlist, function (item) {\n      var index = functions.indexOf(item);\n      if (index > -1) {\n        functions.splice(index, 1);\n      }\n    });\n    return functions;\n\n  }\n  udpateFunctions() {\n    var self = this;\n    var functionList;\n\n    return this.exploreMetrics('functions').then((functions) => {\n      // remove operators like *+-/ from the function list\n      functionList = this.refineFunctionList(functions);\n      self.availableFunctions = functionList;\n    });\n  }\n  ///////////////////////\n\n  transformToSegments(results, addTemplateVars) {\n    var segments = _.map(_.flatten(results), value => {\n      return this.uiSegmentSrv.newSegment({\n        value: value.toString(),\n        expandable: false\n      });\n    });\n\n    if (addTemplateVars) {\n      for (let variable of this.templateSrv.variables) {\n        segments.unshift(this.uiSegmentSrv.newSegment({ type: 'template', value: '$' + variable.name, expandable: true }));\n      }\n    }\n    return segments;\n  }\n\n  fixSegments(segments) {\n    var count = segments.length;\n    var lastSegment = segments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n}\n\nMQEQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}