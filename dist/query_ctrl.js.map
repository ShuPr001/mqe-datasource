{"version":3,"sources":["../src/query_ctrl.js"],"names":["angular","_","QueryCtrl","MQEQuery","MQEQueryCtrl","$scope","$injector","$q","uiSegmentSrv","templateSrv","scope","target_defaults","rawQuery","metrics","metric","apps","hosts","functions","addAppToAlias","addHostToAlias","defaults","target","appSegments","map","newSegment","hostSegments","functionSegments","removeSegment","fake","value","fixSegments","availableMetrics","updateMetrics","getMetrics","bind","$on","onChangeInternal","query","datasource","_mqe_query","then","result","body","_mqe_explore","self","exploreMetrics","panelCtrl","refresh","segment","index","type","undefined","filter","push","newPlusButton","splice","clone","variables","variable","unshift","name","describeQuery","getColumns","invokeMQEQuery","segments","transformToSegments","copy","operatorlist","forEach","item","indexOf","refineFunctionList","results","addTemplateVars","flatten","toString","expandable","count","length","lastSegment","Math","max","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport MQEQuery from './query_builder';\n\nexport class MQEQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q, uiSegmentSrv, templateSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.templateSrv = templateSrv;\n\n    var target_defaults = {\n      rawQuery: \"\",\n      metrics: [{metric: \"\"}],\n      apps: [],\n      hosts: [],\n      functions:[],\n      addAppToAlias: true,\n      addHostToAlias: true\n    };\n    _.defaults(this.target, target_defaults);\n\n    this.appSegments = _.map(this.target.apps, this.uiSegmentSrv.newSegment);\n    this.hostSegments = _.map(this.target.hosts, this.uiSegmentSrv.newSegment);\n    this.functionSegments = _.map(this.target.functions, this.uiSegmentSrv.newSegment);\n    this.removeSegment = uiSegmentSrv.newSegment({fake: true, value: '-- remove --'});\n    this.fixSegments(this.appSegments);\n    this.fixSegments(this.hostSegments);\n    this.fixSegments(this.functionSegments);\n\n    // bs-typeahead can't work with async code so we need to\n    // store metrics first.\n    this.availableMetrics = [];\n    this.updateMetrics();\n    // Pass this to getMetrics() function, because it's called from bs-typeahead\n    // without proper context.\n    this.getMetrics = _.bind(this.getMetrics, this);\n\n    // Update panel when metric selected from dropdown\n    $scope.$on('typeahead-updated', () => {\n      this.onChangeInternal();\n    });\n  }\n\n  invokeMQEQuery(query) {\n    return this.datasource._mqe_query(query).then(result => {\n      return result.body;\n    });\n  }\n\n  exploreMetrics(query) {\n    return this.datasource._mqe_explore(query);\n  }\n\n  updateMetrics() {\n    var self = this;\n    this.exploreMetrics('metrics').then(metrics => {\n      self.availableMetrics = metrics;\n    });\n  }\n\n  // Event handlers\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  getCollapsedText() {\n    return this.target.rawQuery;\n  }\n\n  appSegmentChanged(segment, index) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.apps = _.map(_.filter(this.appSegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.appSegments = _.map(this.target.apps, this.uiSegmentSrv.newSegment);\n    this.appSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.onChangeInternal();\n  }\n\n  hostSegmentChanged(segment, index) {\n    if (segment.type === 'plus-button') {\n      segment.type = undefined;\n    }\n    this.target.hosts = _.map(_.filter(this.hostSegments, segment => {\n      return (segment.type !== 'plus-button' &&\n              segment.value !== this.removeSegment.value);\n    }), 'value');\n    this.hostSegments = _.map(this.target.hosts, this.uiSegmentSrv.newSegment);\n    this.hostSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.onChangeInternal();\n  }\n\n  functionSegmentChanged(segment, index) {\n    let self = this;\n\n    if (segment.type === 'plus-button') {\n        segment.type = undefined;\n    }\n    this.target.functions = _.map(_.filter(this.functionSegments, function (segment) {\n        return segment.type !== 'plus-button' && segment.value !== self.removeSegment.value;\n    }), 'value');\n    this.functionSegments = _.map(this.target.functions, this.uiSegmentSrv.newSegment);\n    this.functionSegments.push(this.uiSegmentSrv.newPlusButton());\n    this.onChangeInternal();\n}\n  addMetric() {\n    this.target.metrics.push({metric: \"\"});\n    this.onChangeInternal();\n  }\n\n  removeMetric(index) {\n    this.target.metrics.splice(index, 1);\n    this.onChangeInternal();\n  }\n\n  ///////////////////////\n  // Query suggestions //\n  ///////////////////////\n\n  getMetrics() {\n    // Don't touch original metric list\n    var metrics = _.clone(this.availableMetrics);\n    for (let variable of this.templateSrv.variables) {\n      metrics.unshift('$' + variable.name);\n    }\n    return metrics;\n  }\n\n  describeMetric(metric) {\n    var describeQuery = MQEQuery.getColumns(metric);\n    return this.invokeMQEQuery(describeQuery);\n  }\n\n  getApps() {\n    return this.exploreMetrics('cluster').then(apps => {\n      let segments = this.transformToSegments(apps, true);\n      segments.splice(0, 0, angular.copy(this.removeSegment));\n      return segments;\n    });\n  }\n\n  getHosts() {\n    return this.exploreMetrics('hosts').then(hosts => {\n      let segments = this.transformToSegments(hosts, true);\n      segments.splice(0, 0, angular.copy(this.removeSegment));\n      return segments;\n    });\n  }\n\n  refineFunctionList(functions) {\n    var operatorlist = ['*','+','-','/'];\n    _.forEach(operatorlist, function (item) {\n        var index = functions.indexOf(item);\n        if (index > -1) {\n            functions.splice(index, 1);\n        }\n    });\n    return functions;\n}\n  getFunctions() {\n\n    return this.exploreMetrics('functions').then((functions) => {\n      // remove operators like *+-/ from the function list\n      functions = this.refineFunctionList(functions);\n      var segments = this.transformToSegments(functions, true);\n      segments.splice(0, 0, angular.copy(this.removeSegment));\n      return segments;\n    });\n  }\n  ///////////////////////\n\n  transformToSegments(results, addTemplateVars) {\n    var segments = _.map(_.flatten(results), value => {\n      return this.uiSegmentSrv.newSegment({\n        value: value.toString(),\n        expandable: false\n      });\n    });\n\n    if (addTemplateVars) {\n      for (let variable of this.templateSrv.variables) {\n        segments.unshift(this.uiSegmentSrv.newSegment({ type: 'template', value: '$' + variable.name, expandable: true }));\n      }\n    }\n    return segments;\n  }\n\n  fixSegments(segments) {\n    var count = segments.length;\n    var lastSegment = segments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n}\n\nMQEQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}